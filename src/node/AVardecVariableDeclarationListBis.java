/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AVardecVariableDeclarationListBis extends PVariableDeclarationListBis
{
    private TSemicolon _semicolon_;
    private PVariableDeclaration _variableDeclaration_;
    private PVariableDeclarationListBis _variableDeclarationListBis_;

    public AVardecVariableDeclarationListBis()
    {
        // Constructor
    }

    public AVardecVariableDeclarationListBis(
        @SuppressWarnings("hiding") TSemicolon _semicolon_,
        @SuppressWarnings("hiding") PVariableDeclaration _variableDeclaration_,
        @SuppressWarnings("hiding") PVariableDeclarationListBis _variableDeclarationListBis_)
    {
        // Constructor
        setSemicolon(_semicolon_);

        setVariableDeclaration(_variableDeclaration_);

        setVariableDeclarationListBis(_variableDeclarationListBis_);

    }

    @Override
    public Object clone()
    {
        return new AVardecVariableDeclarationListBis(
            cloneNode(this._semicolon_),
            cloneNode(this._variableDeclaration_),
            cloneNode(this._variableDeclarationListBis_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVardecVariableDeclarationListBis(this);
    }

    public TSemicolon getSemicolon()
    {
        return this._semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if(this._semicolon_ != null)
        {
            this._semicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semicolon_ = node;
    }

    public PVariableDeclaration getVariableDeclaration()
    {
        return this._variableDeclaration_;
    }

    public void setVariableDeclaration(PVariableDeclaration node)
    {
        if(this._variableDeclaration_ != null)
        {
            this._variableDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variableDeclaration_ = node;
    }

    public PVariableDeclarationListBis getVariableDeclarationListBis()
    {
        return this._variableDeclarationListBis_;
    }

    public void setVariableDeclarationListBis(PVariableDeclarationListBis node)
    {
        if(this._variableDeclarationListBis_ != null)
        {
            this._variableDeclarationListBis_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variableDeclarationListBis_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._semicolon_)
            + toString(this._variableDeclaration_)
            + toString(this._variableDeclarationListBis_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._semicolon_ == child)
        {
            this._semicolon_ = null;
            return;
        }

        if(this._variableDeclaration_ == child)
        {
            this._variableDeclaration_ = null;
            return;
        }

        if(this._variableDeclarationListBis_ == child)
        {
            this._variableDeclarationListBis_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

        if(this._variableDeclaration_ == oldChild)
        {
            setVariableDeclaration((PVariableDeclaration) newChild);
            return;
        }

        if(this._variableDeclarationListBis_ == oldChild)
        {
            setVariableDeclarationListBis((PVariableDeclarationListBis) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
