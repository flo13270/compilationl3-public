/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AVardecVariableDeclaration extends PVariableDeclaration
{
    private TId _id_;
    private TLSbr _lSbr_;
    private TNumber _number_;
    private TRSbr _rSbr_;

    public AVardecVariableDeclaration()
    {
        // Constructor
    }

    public AVardecVariableDeclaration(
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TLSbr _lSbr_,
        @SuppressWarnings("hiding") TNumber _number_,
        @SuppressWarnings("hiding") TRSbr _rSbr_)
    {
        // Constructor
        setId(_id_);

        setLSbr(_lSbr_);

        setNumber(_number_);

        setRSbr(_rSbr_);

    }

    @Override
    public Object clone()
    {
        return new AVardecVariableDeclaration(
            cloneNode(this._id_),
            cloneNode(this._lSbr_),
            cloneNode(this._number_),
            cloneNode(this._rSbr_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVardecVariableDeclaration(this);
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TLSbr getLSbr()
    {
        return this._lSbr_;
    }

    public void setLSbr(TLSbr node)
    {
        if(this._lSbr_ != null)
        {
            this._lSbr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lSbr_ = node;
    }

    public TNumber getNumber()
    {
        return this._number_;
    }

    public void setNumber(TNumber node)
    {
        if(this._number_ != null)
        {
            this._number_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._number_ = node;
    }

    public TRSbr getRSbr()
    {
        return this._rSbr_;
    }

    public void setRSbr(TRSbr node)
    {
        if(this._rSbr_ != null)
        {
            this._rSbr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rSbr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._id_)
            + toString(this._lSbr_)
            + toString(this._number_)
            + toString(this._rSbr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._lSbr_ == child)
        {
            this._lSbr_ = null;
            return;
        }

        if(this._number_ == child)
        {
            this._number_ = null;
            return;
        }

        if(this._rSbr_ == child)
        {
            this._rSbr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._lSbr_ == oldChild)
        {
            setLSbr((TLSbr) newChild);
            return;
        }

        if(this._number_ == oldChild)
        {
            setNumber((TNumber) newChild);
            return;
        }

        if(this._rSbr_ == oldChild)
        {
            setRSbr((TRSbr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
